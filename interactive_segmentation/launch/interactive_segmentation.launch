<launch>
  <arg name="input_point" default="/camera/depth_registered/points" />
  <arg name="input_info" default="/camera/depth_registered/camera_info" />
  <arg name="filter_point" default="/pcl_filter_utils/output/cloud" />
  <arg name="image" default="/camera/rgb/image_rect_color" />
  <arg name="SUPERVOXEL" default="false" />
  <arg name="num_threads" default="8" />
  
  <include file="$(find pcl_filter_utils)/launch/pcl_filter_utils.launch">
    <arg name="cloud" value="$(arg input_point)"/>
  </include>

  <include file="$(find interactive_segmentation)/launch/organized_multi_plane_segmentation.launch">
      <arg name="INPUT" value="$(arg filter_point)"/>
  </include>

  <node pkg="interactive_segmentation" name="interactive_segmentation"
	type="interactive_segmentation_node" output="screen" clear_params="true">
    <remap from="input_image" to="$(arg image)" />
    <!-- <remap from="input_cloud" to="$(arg filter_point)" />  -->
    <remap from="input_cloud" to="/plane_extraction/output_nonplane_cloud" />
    <remap from="input_normal" to="/plane_extraction/output_nonplane_cloud" />
    <remap from="input_info" to="$(arg input_info)" />
    
    <remap from="input_screen" to="/camera/rgb/image_rect_color/screenpoint" />
    <remap from="input_orig_cloud" to="$(arg input_point)" />
  </node>

  <!-- temp commented -->
  <group if="$(arg SUPERVOXEL)" >
    <node pkg="jsk_pcl_ros" type="cluster_point_indices_decomposer" name="supervoxel_segmentation_decomposer">
      <remap from="~input" to="/interactive_segmentation/output/supervoxels" />
      <remap from="~target" to="/interactive_segmentation/output/indices" />
    </node>
  </group>

  <node pkg="image_view2" type="image_view2"
	name="image_view2" output="screen">
    <remap from="image" to="$(arg image)"/>
  </node>

  <!-- temp commented -->
  <!-- <include file="$(find point_cloud_image_creator)/launch/point_cloud_image_creator.launch" > -->
  <!--   <arg name="input" value="/interactive_segmentation/output/selected_probability" /> -->
  <!--   <arg name="mask" value="false" /> -->
  <!--   <arg name="image" value="$(arg image)" /> -->
  <!-- </include> -->

  <!-- erode dilate node -->
  <!-- <node pkg="jsk_perception" name="erode_mask_image" type="erode_mask_image" -->
  <!-- 	output="screen" > -->
  <!--   <remap from="~input" to="/cloud_image/output/foreground_mask" /> -->
  <!-- </node> -->
</launch>
