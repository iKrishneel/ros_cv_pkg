<launch>
  <arg name="input_point" default="/camera/depth_registered/points" />
  <arg name="input_info" default="/camera/depth_registered/camera_info" />
  <arg name="input_normal" default="/multi_plane_estimate/output_normal" />
  <arg name="filter_point" default="/pcl_filter_utils/output/cloud" />  
  <arg name="image" default="/camera/rgb/image_rect_color" />

  <arg name="HANDLE_ESTIMATOR" default="true" />
  <arg name="bounding_box" default="true" />
  <arg name="num_threads" default="8" />
  <arg name="RVIZ" default="false" />


  <!-- launch the pcl distance filter -->
  <include file="$(find pcl_filter_utils)/launch/pcl_filter_utils.launch">
    <arg name="cloud" value="$(arg input_point)"/>
  </include>

  <!-- launch the plane segmentation -->
  <include file="$(find interactive_segmentation)/launch/organized_multi_plane_segmentation.launch">
    <arg name="INPUT" value="$(arg filter_point)"/>
    <arg name="HANDLE_ESTIMATOR" value="$(arg HANDLE_ESTIMATOR)" />
  </include>

  <!-- launch image to get object of interestx -->
  <node pkg="image_view2" type="image_view2"
	name="image_view2" output="screen">
    <remap from="image" to="$(arg image)"/>
  </node>
  
  <!-- launch the main segmentation module -->
  <node pkg="interactive_segmentation" name="interactive_segmentation"
	type="interactive_segmentation_node" output="screen" clear_params="true">
    <!-- <remap from="input_cloud" to="/plane_extraction/output_nonplane_cloud" /> -->
    <remap from="input_cloud" to="/plane_extraction/output" />
    <remap from="input_normal" to="$(arg input_point)" />
    <remap from="input_info" to="$(arg input_info)" />
    <remap from="input_cluster" to="/euclidean_clustering/output" />
    
    <remap from="input_screen" to="$(arg image)/screenpoint" />
    <remap from="input_orig_cloud" to="$(arg input_point)" />

    <remap from="manager_signal" to="/interactive_segmentation_manager/critical/signal"/>
    
    <param name="num_threads" value="$(arg num_threads)" />
    <remap from="num_threads" to="/interactive_segmentation/num_threads" />
  </node>

  <!-- launch the cluster point indices decomposer -->
  <group if="$(arg bounding_box)" >
    <node pkg="jsk_pcl_ros" type="cluster_point_indices_decomposer"
	  name="interactive_segmentation_decomposer" output="screen">
      <remap from="~input" to="/interactive_segmentation/output/cloud" />
      <remap from="~target" to="/interactive_segmentation/output/indices" />
      <remap from="~align_planes" to="/multi_plane_estimate/output_refined_polygon" />
      <remap from="~align_planes_coefficients" to="/multi_plane_estimate/output_refined_coefficients" />
      <param name="align_boxes" value="true" />
      <param name="use_pca" value="true" />
      <param name="publish_clouds" value="false" />
      <param name="publish_tf" value="true" />
    </node>
  </group>

  <!-- launch pushing node -->
  <!-- <node pkg="roseus" type="roseus" name="pr2_push_node" output="screen"  -->
  <!-- 	args="$(find interactive_segmentation)/euslisp/pr2_main.l"> -->
  <!-- </node> -->

  <!-- launch object_region_estimation -->
  <include file="$(find interactive_segmentation)/launch/object_region_estimation.launch">
    <arg name="input_point" value="$(arg input_point)" />
    <arg name="camera_info" value="$(arg input_info)" />
  </include>

  <!-- launch node to get the bounding box -->
  <node pkg="interactive_segmentation" type="bounding_box_handler.py"
	name="bounding_box_handler" output="screen">
  </node>
  
  <!-- launch topic manager -->
  <node pkg="interactive_segmentation" type="interactive_segmentation_manager.py"
	name="interactive_segmentation_manager" output="screen">
  </node>

  <!-- launch custom rviz  -->
  <group if="$(arg RVIZ)" >
      <include file="$(find interactive_segmentation)/launch/rviz.launch"/>
  </group>
  
</launch>
