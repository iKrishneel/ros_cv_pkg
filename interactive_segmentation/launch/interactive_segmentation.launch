<launch>
  <arg name="input_point" default="/camera/depth_registered/points" />
  <arg name="filter_point" default="/pcl_filter_utils/output/cloud" />
  <!-- <include file="$(find interactive_segmentation)/launch/organized_multi_plane_segmentation.launch" /> -->
  <include file="$(find pcl_filter_utils)/launch/pcl_filter_utils.launch" />
  <!-- <include file="$(find point_cloud_image_creator)/launch/point_cloud_image_creator.launch" /> -->
  <!-- <include file="$(find interactive_segmentation)/launch/edge_detector.launch" /> -->
  <!-- <include file="$(find interactive_segmentation)/launch/supervoxel_segmentation.launch" /> -->

  
  <!-- <node pkg="nodelet" type="nodelet" name="passthrough" -->
  <!-- 	args="standalone pcl/PassThrough" output="screen"> -->
  <!--   <remap from="~input" to="$(arg input_point)" /> -->
  <!--   <rosparam> -->
  <!--     filter_field_name: z -->
  <!--     filter_limit_min: 0.01 -->
  <!--     filter_limit_max: 1.5 -->
  <!--     keep_organized: true -->
  <!--   </rosparam> -->
  <!-- </node> -->

  <node pkg="interactive_segmentation" name="interactive_segmentation"
	type="interactive_segmentation_node" output="screen">
    <remap from="input_image" to="/camera/rgb/image_rect_color" />
    <remap from="input_cloud" to="$(arg filter_point)" /> 
    <remap from="input_normal" to="$(arg input_point)" />

  </node>

  <node pkg="jsk_pcl_ros" type="cluster_point_indices_decomposer" name="supervoxel_segmentation_decomposer">
    <remap from="~input" to="/interactive_segmentation/output/supervoxels" />
    <remap from="~target" to="/interactive_segmentation/output/indices" />
  </node>
  
</launch>
