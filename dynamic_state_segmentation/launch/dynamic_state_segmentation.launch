<launch>
  <arg name="points" default="/camera/depth_registered/points" />
  <arg name="image" default="/camera/rgb/image_rect_color" />

  <arg name="sub_plane" default="false" />
  <arg name="cluster_points" default="false" />
  
  <include file="$(find pcl_filter_utils)/launch/pcl_filter_utils.launch">
    <arg name="cloud" value="$(arg points)"/>
  </include>
  
  <node pkg="dynamic_state_segmentation" type="dynamic_state_segmentation_node"
	name="dynamic_state_segmentation" output="screen" >
    <remap from="input_cloud" to="/pcl_filter_utils/output/cloud" />
    <remap from="input_point" to="$(arg image)/screenpoint" />
  </node>
  
  <node pkg="image_view2" type="image_view2"
	name="image_view2" output="screen">
    <remap from="image" to="$(arg image)" />
  </node>
  
  <group if="$(arg cluster_points)">
    <node pkg="jsk_pcl_ros" type="cluster_point_indices_decomposer"
	  name="dynamic_state_segmentation_decomposer" output="screen">
      <remap from="~input" to="target" />
      <remap from="~target" to="indices" />

      <remap from="~align_planes" to="/multi_plane_estimate/output_refined_polygon" />
      <remap from="~align_planes_coefficients" to="/multi_plane_estimate/output_refined_coefficients" />
      <param name="align_boxes" value="true" />
      <param name="use_pca" value="true" />
      <param name="publish_clouds" value="false" />
      <param name="publish_tf" value="true" />
    </node>
  </group>	 

  <group if="$(arg sub_plane)">
    <include file="$(find interactive_segmentation)/launch/organized_multi_plane_segmentation.launch">
      <arg name="INPUT" value="/pcl_filter_utils/output/cloud"/>
      <arg name="HANDLE_ESTIMATOR" value="false" />
    </include>
  </group>	 
  
</launch>
